#!/bin/bash

# should set toplevel via autoconf?
toplevel=$PWD/../..

packagedir=$toplevel/packages
pacakges=""

PREFIX=/ruckus/staging

# setup environment to use software as we install it
export PATH=$PREFIX/bin:$PREFIX/sbin:$PATH
export MANPATH=$PREFIX/man:$PREFIX/share/man:$MANPATH
export PKG_CONFIG_PATH=$PREFIX/lib/pkg-config:$PKG_CONFIG_PATH
if [ -z "$LD_LIBRARY_PATH" ]; then
    export LD_LIBRARY_PATH=$PREFIX/lib
else
    export LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH
fi

# might need autotools
packages+=" autoconf automake libtool"

# don't remember why
packages+=" bison"

# to ensure that we don't inadvertantly use a modified version with
# non-standard extensions to build our filesystems
packages+=" e2fsprogs"

# a lot of the build tools are written in python
packages+=" python"

# the Source Ruckus Packager
packages+=" srp"

# might want to make sure we have the worlds greatest scm tool
packages+=" git"


# define generic builder method
build_generic()
{
    builddir=.build/$1
    configure=$packagedir/$1/configure
    mkdir -p $builddir
    if [ ! -x $configure ]; then
	configure=./configure
	pushd $builddir
	tar jxf $packagedir/$1/*.bz2 || exit 1
	builddir=$builddir/* || exit 1
	popd
    fi

    pushd $builddir
    $configure --prefix=$PREFIX || exit 1
    make -j3 install || exit 1
    popd
}

build()
{
    case "$1" in
	srp)
	    build_srp
	    ;;
	*)
	    build_generic $1
    esac
}



#build_bison()
#{
#    echo yeah
#}

# build and install each package in our /ruckus/staging tree
for p in $packages; do
    echo "building package: $p"
    build $p || exit 1
done
